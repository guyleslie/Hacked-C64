# CMake single-platform workflow for Oscar64-based C64 project
# This workflow assumes Windows runner and local Oscar64 toolchain

name: CMake Single Platform Oscar64 Build

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up CMake
        uses: lukka/get-cmake@latest

      - name: Download Oscar64 latest release
        shell: pwsh
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $oscarDir = "$env:GITHUB_WORKSPACE/oscar64_temp"
          New-Item -ItemType Directory -Force -Path $oscarDir | Out-Null
          $headers = @{ Authorization = "token $env:GH_TOKEN" }
          $release = Invoke-RestMethod -Uri "https://api.github.com/repos/drmortalwombat/oscar64/releases/latest" -Headers $headers
          $asset = $release.assets | Where-Object { $_.name -eq "oscar64.zip" }
          if (-not $asset) {
            Write-Error "No oscar64.zip asset found in latest release. Assets: $($release.assets.name -join ', ')"
            exit 1
          }
          Write-Host "Downloading $($asset.name) from $($asset.browser_download_url)"
          Invoke-WebRequest -Uri $asset.browser_download_url -OutFile "oscar64.zip"
          Expand-Archive -Path "oscar64.zip" -DestinationPath $oscarDir

      - name: Configure CMake
        shell: pwsh
        run: |
          $oscarDir = "$env:GITHUB_WORKSPACE/oscar64_temp"
          cmake -S . -B build -DOSCAR64_PATH="$oscarDir"

      - name: Build with CMake
        run: |
          cmake --build build --target oscar64_build
        shell: cmd

      - name: Cleanup Oscar64
        if: always()
        shell: pwsh
        run: |
          Remove-Item -Recurse -Force "$env:GITHUB_WORKSPACE/oscar64_temp"

      - name: List build output
        run: |
          dir build
        shell: cmd
